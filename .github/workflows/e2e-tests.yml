name: E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  e2e-tests:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install backend dependencies
        run: |
          cd backend
          bun install

      - name: Install frontend dependencies
        run: |
          cd frontend
          bun install

      - name: Install Playwright dependencies
        run: |
          npm ci
          npx playwright install --with-deps chromium

      - name: Setup test database
        run: |
          cd backend
          export DATABASE_PATH=./data/e2e-test.db
          export APP_USERNAME=admin
          export APP_PASSWORD=admin
          bun run db:generate
          bun run db:migrate

      - name: Run E2E tests
        run: npm run test:e2e
        env:
          CI: true
          BASE_URL: http://localhost:5173

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results/
          retention-days: 30

      - name: Generate test summary
        if: always()
        run: |
          if [ -f test-results/results.json ]; then
            echo "## E2E Test Results" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            
            # Extract test counts from results.json
            TOTAL=$(jq '.stats.total // 0' test-results/results.json)
            PASSED=$(jq '.stats.expected // 0' test-results/results.json)
            FAILED=$(jq '.stats.unexpected // 0' test-results/results.json)
            SKIPPED=$(jq '.stats.skipped // 0' test-results/results.json)
            
            echo "- **Total Tests:** $TOTAL" >> $GITHUB_STEP_SUMMARY
            echo "- **Passed:** ✅ $PASSED" >> $GITHUB_STEP_SUMMARY
            echo "- **Failed:** ❌ $FAILED" >> $GITHUB_STEP_SUMMARY
            echo "- **Skipped:** ⏭️ $SKIPPED" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            
            if [ $FAILED -gt 0 ]; then
              echo "### Failed Tests" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              jq -r '.suites[].specs[] | select(.tests[].results[].status == "failed") | "- " + .title' test-results/results.json >> $GITHUB_STEP_SUMMARY || true
            fi
          else
            echo "⚠️ Test results file not found" >> $GITHUB_STEP_SUMMARY
          fi
